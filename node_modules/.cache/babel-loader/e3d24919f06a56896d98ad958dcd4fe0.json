{"ast":null,"code":"import _classCallCheck from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Desktop/memory/src/App.js\";\nimport React, { Component } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\nimport HallOfFame, { FAKE_HOF } from './HallOfFame';\nimport Card from './Card';\nimport GuessCount from './GuessCount';\nvar SIDE = 6;\nvar SYMBOLS = '😀🎉💖🎩🐶🐱🦄🐬🌍🌛🌞💫🍎🍌🍓🍐🍟🍿';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: _this.generateCards(),\n      currentPair: [],\n      guesses: 0,\n      matchedCardIndices: []\n    };\n\n    _this.handleCardClick = function (index) {\n      var currentPair = _this.state.currentPair;\n\n      if (currentPair.length === 2) {\n        return;\n      }\n\n      if (currentPair.length === 0) {\n        _this.setState({\n          currentPair: [index]\n        });\n\n        return;\n      }\n\n      _this.handleNewPairClosedBy(index);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"generateCards\",\n    value: function generateCards() {\n      var result = [];\n      var size = SIDE * SIDE;\n      var candidates = shuffle(SYMBOLS);\n\n      while (result.length < size) {\n        var card = candidates.pop();\n        result.push(card, card);\n      }\n\n      return shuffle(result);\n    }\n  }, {\n    key: \"getFeedbackForCard\",\n    value: function getFeedbackForCard(index) {\n      var _this$state = this.state,\n          currentPair = _this$state.currentPair,\n          matchedCardIndices = _this$state.matchedCardIndices;\n      var indexMatched = matchedCardIndices.includes(index);\n\n      if (currentPair.length < 2) {\n        return indexMatched || index === currentPair[0] ? 'visible' : 'hidden';\n      }\n\n      if (currentPair.includes(index)) {\n        return indexMatched ? 'justMatched' : 'justMismatched';\n      }\n\n      return indexMatched ? 'visible' : 'hidden';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          cards = _this$state2.cards,\n          guesses = _this$state2.guesses,\n          matchedCardIndices = _this$state2.matchedCardIndices;\n      var won = matchedCardIndices.length === cards.length;\n      return React.createElement(\"div\", {\n        className: \"memory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(GuessCount, {\n        guesses: guesses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), cards.map(function (card, index) {\n        return React.createElement(Card, {\n          card: card,\n          feedback: _this2.getFeedbackForCard(index),\n          index: index,\n          key: index,\n          onClick: _this2.handleCardClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }), won && React.createElement(HallOfFame, {\n        entries: FAKE_HOF,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/memory/src/App.js"],"names":["React","Component","shuffle","HallOfFame","FAKE_HOF","Card","GuessCount","SIDE","SYMBOLS","App","state","cards","generateCards","currentPair","guesses","matchedCardIndices","handleCardClick","index","length","setState","handleNewPairClosedBy","result","size","candidates","card","pop","push","indexMatched","includes","won","map","getFeedbackForCard"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAoC,cAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,IAAI,GAAG,CAAb;AACA,IAAMC,OAAO,GAAG,sCAAhB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,MAAKC,aAAL,EADD;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,OAAO,EAAE,CAHH;AAINC,MAAAA,kBAAkB,EAAE;AAJd,K;;UAkBRC,e,GAAkB,UAAAC,KAAK,EAAI;AAAA,UACjBJ,WADiB,GACD,MAAKH,KADJ,CACjBG,WADiB;;AAGzB,UAAIA,WAAW,CAACK,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B;AACD;;AAED,UAAIL,WAAW,CAACK,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,cAAKC,QAAL,CAAc;AAAEN,UAAAA,WAAW,EAAE,CAACI,KAAD;AAAf,SAAd;;AACA;AACD;;AAED,YAAKG,qBAAL,CAA2BH,KAA3B;AACD,K;;;;;;;oCAxBe;AACd,UAAMI,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAGf,IAAI,GAAGA,IAApB;AACA,UAAMgB,UAAU,GAAGrB,OAAO,CAACM,OAAD,CAA1B;;AACA,aAAOa,MAAM,CAACH,MAAP,GAAgBI,IAAvB,EAA6B;AAC3B,YAAME,IAAI,GAAGD,UAAU,CAACE,GAAX,EAAb;AACAJ,QAAAA,MAAM,CAACK,IAAP,CAAYF,IAAZ,EAAkBA,IAAlB;AACD;;AACD,aAAOtB,OAAO,CAACmB,MAAD,CAAd;AACD;;;uCAiBkBJ,K,EAAO;AAAA,wBACkB,KAAKP,KADvB;AAAA,UAClBG,WADkB,eAClBA,WADkB;AAAA,UACLE,kBADK,eACLA,kBADK;AAE1B,UAAMY,YAAY,GAAGZ,kBAAkB,CAACa,QAAnB,CAA4BX,KAA5B,CAArB;;AAEA,UAAIJ,WAAW,CAACK,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,eAAOS,YAAY,IAAIV,KAAK,KAAKJ,WAAW,CAAC,CAAD,CAArC,GAA2C,SAA3C,GAAuD,QAA9D;AACD;;AAED,UAAIA,WAAW,CAACe,QAAZ,CAAqBX,KAArB,CAAJ,EAAiC;AAC/B,eAAOU,YAAY,GAAG,aAAH,GAAmB,gBAAtC;AACD;;AAED,aAAOA,YAAY,GAAG,SAAH,GAAe,QAAlC;AACD;;;6BAEU;AAAA;;AAAA,yBACwC,KAAKjB,KAD7C;AAAA,UACCC,KADD,gBACCA,KADD;AAAA,UACQG,OADR,gBACQA,OADR;AAAA,UACiBC,kBADjB,gBACiBA,kBADjB;AAEP,UAAMc,GAAG,GAAGd,kBAAkB,CAACG,MAAnB,KAA8BP,KAAK,CAACO,MAAhD;AACA,aACG;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAEJ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAEFH,KAAK,CAACmB,GAAN,CAAU,UAACN,IAAD,EAAOP,KAAP;AAAA,eACT,oBAAC,IAAD;AACE,UAAA,IAAI,EAAEO,IADR;AAEE,UAAA,QAAQ,EAAE,MAAI,CAACO,kBAAL,CAAwBd,KAAxB,CAFZ;AAGE,UAAA,KAAK,EAAEA,KAHT;AAIE,UAAA,GAAG,EAAEA,KAJP;AAKE,UAAA,OAAO,EAAE,MAAI,CAACD,eALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADS;AAAA,OAAV,CAFE,EAWEa,GAAG,IAAI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAEzB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXT,CADH;AAeD;;;;EAnEeH,S;;AAsElB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport shuffle from 'lodash.shuffle'\nimport './App.css'\nimport HallOfFame, { FAKE_HOF} from './HallOfFame'\nimport Card from './Card'\nimport GuessCount from './GuessCount'\n\nconst SIDE = 6\nconst SYMBOLS = '😀🎉💖🎩🐶🐱🦄🐬🌍🌛🌞💫🍎🍌🍓🍐🍟🍿'\n\nclass App extends Component {\n  state = {\n    cards: this.generateCards(),\n    currentPair: [],\n    guesses: 0,\n    matchedCardIndices: [],\n  }\n\n  generateCards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = shuffle(SYMBOLS)\n    while (result.length < size) {\n      const card = candidates.pop()\n      result.push(card, card)\n    }\n    return shuffle(result)\n  }\n\n  handleCardClick = index => {\n    const { currentPair } = this.state\n\n    if (currentPair.length === 2) {\n      return\n    }\n\n    if (currentPair.length === 0) {\n      this.setState({ currentPair: [index] })\n      return\n    }\n\n    this.handleNewPairClosedBy(index)\n  }\n\n  getFeedbackForCard(index) {\n  const { currentPair, matchedCardIndices } = this.state\n  const indexMatched = matchedCardIndices.includes(index)\n\n  if (currentPair.length < 2) {\n    return indexMatched || index === currentPair[0] ? 'visible' : 'hidden'\n  }\n\n  if (currentPair.includes(index)) {\n    return indexMatched ? 'justMatched' : 'justMismatched'\n  }\n\n  return indexMatched ? 'visible' : 'hidden'\n}\n\n  render() {\n    const { cards, guesses, matchedCardIndices } = this.state\n    const won = matchedCardIndices.length === cards.length\n    return (\n       <div className=\"memory\">\n    <GuessCount guesses={guesses} />\n    {cards.map((card, index) => (\n      <Card\n        card={card}\n        feedback={this.getFeedbackForCard(index)}\n        index={index}\n        key={index}\n        onClick={this.handleCardClick}\n      />\n    ))}\n        {won && <HallOfFame entries={FAKE_HOF}/>}\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}