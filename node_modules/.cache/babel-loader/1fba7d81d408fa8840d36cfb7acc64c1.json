{"ast":null,"code":"import _classCallCheck from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/user/Desktop/memory/src/App.js\";\nimport React, { Component } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\nimport HallOfFame, { FAKE_HOF } from './HallOfFame';\nimport Card from './Card';\nimport GuessCount from './GuessCount';\nvar SIDE = 6;\nvar SYMBOLS = '😀🎉💖🎩🐶🐱🦄🐬🌍🌛🌞💫🍎🍌🍓🍐🍟🍿';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: _this.generateCards(),\n      currentPair: [],\n      guesses: 0,\n      matchedCardIndices: []\n    };\n\n    _this.handleCardClick = function (card) {\n      console.log(card, _assertThisInitialized(_assertThisInitialized(_this)));\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"generateCards\",\n    value: function generateCards() {\n      var result = [];\n      var size = SIDE * SIDE;\n      var candidates = shuffle(SYMBOLS);\n\n      while (result.length < size) {\n        var card = candidates.pop();\n        result.push(card, card);\n      }\n\n      return shuffle(result);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          cards = _this$state.cards,\n          guesses = _this$state.guesses,\n          matchedCardIndices = _this$state.matchedCardIndices;\n      var won = matchedCardIndices.length === cards.length;\n      return React.createElement(\"div\", {\n        className: \"memory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(GuessCount, {\n        guesses: guesses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), cards.map(function (card, index) {\n        return React.createElement(Card, {\n          card: card,\n          feedback: \"visible\",\n          key: index,\n          onClick: _this2.handleCardClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      }), won && React.createElement(HallOfFame, {\n        entries: FAKE_HOF,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/memory/src/App.js"],"names":["React","Component","shuffle","HallOfFame","FAKE_HOF","Card","GuessCount","SIDE","SYMBOLS","App","state","cards","generateCards","currentPair","guesses","matchedCardIndices","handleCardClick","card","console","log","result","size","candidates","length","pop","push","won","map","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAoC,cAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,IAAI,GAAG,CAAb;AACA,IAAMC,OAAO,GAAG,sCAAhB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,MAAKC,aAAL,EADD;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,OAAO,EAAE,CAHH;AAINC,MAAAA,kBAAkB,EAAE;AAJd,K;;UAkBRC,e,GAAkB,UAACC,IAAD,EAAU;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,K;;;;;;;oCAbe;AACd,UAAMG,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAGd,IAAI,GAAGA,IAApB;AACA,UAAMe,UAAU,GAAGpB,OAAO,CAACM,OAAD,CAA1B;;AACA,aAAOY,MAAM,CAACG,MAAP,GAAgBF,IAAvB,EAA6B;AAC3B,YAAMJ,IAAI,GAAGK,UAAU,CAACE,GAAX,EAAb;AACAJ,QAAAA,MAAM,CAACK,IAAP,CAAYR,IAAZ,EAAkBA,IAAlB;AACD;;AACD,aAAOf,OAAO,CAACkB,MAAD,CAAd;AACD;;;6BAMQ;AAAA;;AAAA,wBACwC,KAAKV,KAD7C;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQG,OADR,eACQA,OADR;AAAA,UACiBC,kBADjB,eACiBA,kBADjB;AAEP,UAAMW,GAAG,GAAGX,kBAAkB,CAACQ,MAAnB,KAA8BZ,KAAK,CAACY,MAAhD;AACA,aACG;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAET,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAEFH,KAAK,CAACgB,GAAN,CAAU,UAACV,IAAD,EAAOW,KAAP;AAAA,eACT,oBAAC,IAAD;AACE,UAAA,IAAI,EAAEX,IADR;AAEE,UAAA,QAAQ,EAAC,SAFX;AAGE,UAAA,GAAG,EAAEW,KAHP;AAIE,UAAA,OAAO,EAAE,MAAI,CAACZ,eAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADS;AAAA,OAAV,CAFE,EAUEU,GAAG,IAAI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAEtB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVT,CADH;AAcD;;;;EAxCeH,S;;AA2ClB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport shuffle from 'lodash.shuffle'\nimport './App.css'\nimport HallOfFame, { FAKE_HOF} from './HallOfFame'\nimport Card from './Card'\nimport GuessCount from './GuessCount'\n\nconst SIDE = 6\nconst SYMBOLS = '😀🎉💖🎩🐶🐱🦄🐬🌍🌛🌞💫🍎🍌🍓🍐🍟🍿'\n\nclass App extends Component {\n  state = {\n    cards: this.generateCards(),\n    currentPair: [],\n    guesses: 0,\n    matchedCardIndices: [],\n  }\n\n  generateCards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = shuffle(SYMBOLS)\n    while (result.length < size) {\n      const card = candidates.pop()\n      result.push(card, card)\n    }\n    return shuffle(result)\n  }\n\n  handleCardClick = (card) => {\n    console.log(card, this)\n  }\n\n  render() {\n    const { cards, guesses, matchedCardIndices } = this.state\n    const won = matchedCardIndices.length === cards.length\n    return (\n       <div className=\"memory\">\n    <GuessCount guesses={guesses} />\n    {cards.map((card, index) => (\n      <Card\n        card={card}\n        feedback=\"visible\"\n        key={index}\n        onClick={this.handleCardClick}\n      />\n    ))}\n        {won && <HallOfFame entries={FAKE_HOF}/>}\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}