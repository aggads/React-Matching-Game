{"ast":null,"code":"import _toConsumableArray from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Desktop/memory/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Desktop/memory/src/App.js\";\nimport React, { Component } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\nimport HallOfFame, { FAKE_HOF } from './HallOfFame';\nimport Card from './Card';\nimport GuessCount from './GuessCount';\nimport HighScoreInput from './HighScoreInput';\nvar SIDE = 6;\nvar SYMBOLS = '😀🎉💖🎩🐶🐱🦄🐬🌍🌛🌞💫🍎🍌🍓🍐🍟🍿';\nvar VISUAL_PAUSE_MSECS = 750;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: _this.generateCards(),\n      currentPair: [],\n      guesses: 0,\n      hallOfFame: null,\n      matchedCardIndices: []\n    };\n\n    _this.displayHallOfFame = function (hallOfFame) {\n      _this.state({\n        hallOfFame: hallOfFame\n      });\n    };\n\n    _this.handleCardClick = function (index) {\n      var currentPair = _this.state.currentPair;\n\n      if (currentPair.length === 2) {\n        return;\n      }\n\n      if (currentPair.length === 0) {\n        _this.setState({\n          currentPair: [index]\n        });\n\n        return;\n      }\n\n      _this.handleNewPairClosedBy(index);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleNewPairClosedBy\",\n    value: function handleNewPairClosedBy(index) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          cards = _this$state.cards,\n          currentPair = _this$state.currentPair,\n          guesses = _this$state.guesses,\n          matchedCardIndices = _this$state.matchedCardIndices;\n      var newPair = [currentPair[0], index];\n      var newGuesses = guesses + 1;\n      var matched = cards[newPair[0]] === cards[newPair[1]];\n      this.setState({\n        currentPair: newPair,\n        guesses: newGuesses\n      });\n\n      if (matched) {\n        this.setState({\n          matchedCardIndices: [].concat(_toConsumableArray(matchedCardIndices), newPair)\n        });\n      }\n\n      setTimeout(function () {\n        return _this2.setState({\n          currentPair: []\n        });\n      }, VISUAL_PAUSE_MSECS);\n    }\n  }, {\n    key: \"generateCards\",\n    value: function generateCards() {\n      var result = [];\n      var size = SIDE * SIDE;\n      var candidates = shuffle(SYMBOLS);\n\n      while (result.length < size) {\n        var card = candidates.pop();\n        result.push(card, card);\n      }\n\n      return shuffle(result);\n    }\n  }, {\n    key: \"getFeedbackForCard\",\n    value: function getFeedbackForCard(index) {\n      var _this$state2 = this.state,\n          currentPair = _this$state2.currentPair,\n          matchedCardIndices = _this$state2.matchedCardIndices;\n      var indexMatched = matchedCardIndices.includes(index);\n\n      if (currentPair.length < 2) {\n        return indexMatched || index === currentPair[0] ? 'visible' : 'hidden';\n      }\n\n      if (currentPair.includes(index)) {\n        return indexMatched ? 'justMatched' : 'justMismatched';\n      }\n\n      return indexMatched ? 'visible' : 'hidden';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          cards = _this$state3.cards,\n          guesses = _this$state3.guesses,\n          hallOfFame = _this$state3.hallOfFame,\n          matchedCardIndices = _this$state3.matchedCardIndices;\n      var won = matchedCardIndices.length === cards.length;\n      return React.createElement(\"div\", {\n        className: \"memory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(GuessCount, {\n        guesses: guesses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), cards.map(function (card, index) {\n        return React.createElement(Card, {\n          card: card,\n          feedback: _this3.getFeedbackForCard(index),\n          index: index,\n          key: index,\n          onClick: _this3.handleCardClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }), won && (hallOfFame ? React.createElement(HallOfFame, {\n        entries: hallOfFame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }) : React.createElement(HighScoreInput, {\n        guesses: guesses,\n        onStored: this.displayHallOfFame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/memory/src/App.js"],"names":["React","Component","shuffle","HallOfFame","FAKE_HOF","Card","GuessCount","HighScoreInput","SIDE","SYMBOLS","VISUAL_PAUSE_MSECS","App","state","cards","generateCards","currentPair","guesses","hallOfFame","matchedCardIndices","displayHallOfFame","handleCardClick","index","length","setState","handleNewPairClosedBy","newPair","newGuesses","matched","setTimeout","result","size","candidates","card","pop","push","indexMatched","includes","won","map","getFeedbackForCard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport shuffle from 'lodash.shuffle'\nimport './App.css'\nimport HallOfFame, { FAKE_HOF} from './HallOfFame'\nimport Card from './Card'\nimport GuessCount from './GuessCount'\nimport HighScoreInput from './HighScoreInput'\n\n\nconst SIDE = 6\nconst SYMBOLS = '😀🎉💖🎩🐶🐱🦄🐬🌍🌛🌞💫🍎🍌🍓🍐🍟🍿'\n\nconst VISUAL_PAUSE_MSECS = 750\n\nclass App extends Component {\n  state = {\n    cards: this.generateCards(),\n    currentPair: [],\n    guesses: 0,\n    hallOfFame: null,\n    matchedCardIndices: [],\n  }\n\n  displayHallOfFame = (hallOfFame) => {\n    this.state({hallOfFame})\n  }\n\n  handleNewPairClosedBy(index) {\n    const { cards, currentPair, guesses, matchedCardIndices } = this.state\n    const newPair = [currentPair[0], index]\n    const newGuesses = guesses + 1\n    const matched = cards[newPair[0]] === cards[newPair[1]]\n    this.setState({ currentPair: newPair, guesses: newGuesses})\n    if (matched) {\n      this.setState({ matchedCardIndices: [...matchedCardIndices, ...newPair]})\n    }\n    setTimeout(() => this.setState({ currentPair: []}), VISUAL_PAUSE_MSECS)\n\n  }\n\n  generateCards() {\n    const result = []\n    const size = SIDE * SIDE\n    const candidates = shuffle(SYMBOLS)\n    while (result.length < size) {\n      const card = candidates.pop()\n      result.push(card, card)\n    }\n    return shuffle(result)\n  }\n\n  handleCardClick = index => {\n    const { currentPair } = this.state\n\n    if (currentPair.length === 2) {\n      return\n    }\n\n    if (currentPair.length === 0) {\n      this.setState({ currentPair: [index] })\n      return\n    }\n\n    this.handleNewPairClosedBy(index)\n  }\n\n  getFeedbackForCard(index) {\n  const { currentPair, matchedCardIndices } = this.state\n  const indexMatched = matchedCardIndices.includes(index)\n\n  if (currentPair.length < 2) {\n    return indexMatched || index === currentPair[0] ? 'visible' : 'hidden'\n  }\n\n  if (currentPair.includes(index)) {\n    return indexMatched ? 'justMatched' : 'justMismatched'\n  }\n\n  return indexMatched ? 'visible' : 'hidden'\n}\n\n  render() {\n    const { cards, guesses, hallOfFame, matchedCardIndices } = this.state\n    const won = matchedCardIndices.length === cards.length\n    return (\n       <div className=\"memory\">\n    <GuessCount guesses={guesses} />\n    {cards.map((card, index) => (\n      <Card\n        card={card}\n        feedback={this.getFeedbackForCard(index)}\n        index={index}\n        key={index}\n        onClick={this.handleCardClick}\n      />\n    ))}\n        {\n          won &&\n            (hallOfFame ? (\n              <HallOfFame entries={hallOfFame} />\n            ) : (\n              <HighScoreInput guesses={guesses} onStored={this.displayHallOfFame} />\n            ))\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}